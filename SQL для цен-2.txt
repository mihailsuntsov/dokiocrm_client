alter table sprav_status_dock add column is_default boolean;

**********************************************************************************************************
**********************************************************************************************************
**********************************************************************************************************

alter table customers_orders drop column fio;
alter table customers_orders drop column is_archive;
alter table customers_orders add column is_deleted boolean;
--ALTER TABLE customers_orders DROP COLUMN zip_code; уже сделано
--ALTER TABLE customers_orders ADD COLUMN zip_code varchar(40); уже сделано
--update customers_orders set zip_code = ''; уже сделано
alter table sprav_type_prices add column is_default boolean;

**********************************************************************************************************
**********************************************************************************************************
**********************************************************************************************************

alter table customers_orders_product add column department_id bigint not null;
alter table customers_orders_product add constraint department_id_fkey foreign key (department_id) references departments (id);
alter table customers_orders_product add column shipped_count numeric(15,3);

alter table departments add column is_deleted boolean;

update departments set is_deleted=is_archive;

alter table customers_orders_product add column product_price_of_type_price numeric(12,2);
alter table customers_orders_product add column reserve boolean;
alter table customers_orders_product drop column additional;
alter table customers_orders_product drop column reserved;
alter table customers_orders_product drop column shipped_count;
alter table customers_orders_product drop constraint customers_orders_product_uq;
ALTER TABLE customers_orders_product ADD CONSTRAINT customers_orders_product_uq UNIQUE (customers_orders_id, product_id, department_id) ;

alter table customers_orders_product add column master_id bigint not null;
alter table customers_orders_product add column company_id bigint not null;
ALTER TABLE customers_orders alter COLUMN master_id TYPE bigint USING master_id::bigint;
ALTER TABLE customers_orders alter COLUMN creator_id TYPE bigint USING creator_id::bigint;
ALTER TABLE customers_orders alter COLUMN changer_id TYPE bigint USING changer_id::bigint;
ALTER TABLE customers_orders alter COLUMN company_id TYPE bigint USING company_id::bigint;
ALTER TABLE customers_orders alter COLUMN department_id TYPE bigint USING department_id::bigint;
ALTER TABLE customers_orders alter COLUMN cagent_id TYPE bigint USING cagent_id::bigint;

delete from shipment_product;
alter table shipment_product add column master_id bigint not null;
alter table shipment_product add column company_id bigint not null;
alter table shipment_product drop column additional;
ALTER TABLE shipment alter COLUMN master_id TYPE bigint USING master_id::bigint;
ALTER TABLE shipment alter COLUMN creator_id TYPE bigint USING creator_id::bigint;
ALTER TABLE shipment alter COLUMN changer_id TYPE bigint USING changer_id::bigint;
ALTER TABLE shipment alter COLUMN company_id TYPE bigint USING company_id::bigint;
ALTER TABLE shipment alter COLUMN department_id TYPE bigint USING department_id::bigint;
ALTER TABLE shipment alter COLUMN cagent_id TYPE bigint USING cagent_id::bigint;

alter table customers_orders_product add column id bigint not null;
CREATE SEQUENCE customers_orders_product_id_seq START 1;
alter table customers_orders_product alter column id set default nextval ('customers_orders_product_id_seq');
alter sequence customers_orders_product_id_seq owned by customers_orders_product.id;

alter table customers_orders_product alter price_type_id drop not null;

create table settings_customers_orders (
    id                  bigserial primary key not null,
    master_id           bigint not null, 
    company_id          bigint not null,  
    user_id             bigint not null,
    pricing_type        varchar(16), 
    price_type_id       bigint,
    change_price        numeric(12,2),
    plus_minus          varchar(8),
    change_price_type   varchar(8),
    hide_tenths         boolean,
    save_settings       boolean,
    foreign key (price_type_id) references sprav_type_prices (id),
    foreign key (master_id) references users(id),
    foreign key (user_id) references users(id),
    foreign key (company_id) references companies(id)
);
ALTER TABLE settings_customers_orders ADD CONSTRAINT settings_customers_orders_user_uq UNIQUE (user_id);

alter table settings_customers_orders add column department_id bigint;
alter table settings_customers_orders add constraint department_id_fkey foreign key (department_id) references departments (id);
alter table settings_customers_orders add column customer_id bigint;
alter table settings_customers_orders add constraint customer_id_fkey foreign key (customer_id) references cagents (id);

alter table settings_customers_orders add column priority_type_price_side varchar(8);
alter table settings_customers_orders add column name varchar(120);

--удаление старых таблиц
drop table sell_positions;
drop table kassa_operations;
drop table sessions;
drop table trading_equipment;
drop table sprav_sys_cheque_types;
drop table sprav_sys_kassa_operations;
drop table sprav_sys_trading_equipment;

create table sprav_sys_cheque_types(
    id              int not null,
    name            varchar(100),
    name_api_atol   varchar(32)
);

insert into sprav_sys_cheque_types (id, name, name_api_atol) values
(1,'Чек прихода','sell'),
(2,'Чек возврата прихода','sellReturn'),
(4,'Чек расхода','buy'),
(5,'Чек возврата расхода','buyReturn'),
(7,'Чек коррекции прихода','sellCorrection'),
(8,'Чек коррекции возврата прихода','sellReturnCorrection'),
(9,'Чек коррекции расхода','buyCorrection'),
(10,'Чек коррекции возврата расхода','buyReturnCorrection');

create table sprav_sys_taxation_types(
    id              int not null,
    name            varchar(300) not null,
    name_api_atol   varchar(32) not null,
    is_active       boolean not null
);

insert into sprav_sys_taxation_types (id, name, name_api_atol, is_active) values
(1,'Общая','osn',true),
(2,'Упрощенная доход','usnIncome',true),
(3,'Упрощенная доход минус расход','usnIncomeOutcome',true),
(4,'Единый налог на вменённый доход','envd',false),
(5,'Единый сельскохозяйственный налог','esn',true),
(6,'Патентная система налогообложения','patent',true);

create table sprav_sys_payment_methods(
    id              int not null,
    name            varchar(300) not null,
    id_api_atol     int not null,
    name_api_atol   varchar(32) not null
);

insert into sprav_sys_payment_methods (id, name, id_api_atol, name_api_atol) values
(1,'Наличными',0,'cash'),
(2,'Безналичными',1,'electronically'),
(3,'Предварительная оплата (аванс)',2,'prepaid'),
(4,'Последующая оплата (кредит)',3,'credit'),
(5,'Иная форма оплаты',4,'other');

alter table sprav_sys_nds add column name_api_atol varchar(30);
alter table sprav_sys_nds add column is_active boolean;
update sprav_sys_nds set is_active=true;

update sprav_sys_nds set name_api_atol='none' where id=1;
update sprav_sys_nds set name_api_atol='vat0' where id=4;
update sprav_sys_nds set name_api_atol='vat10' where id=3;
update sprav_sys_nds set name_api_atol='vat20' where id=2;

alter table sprav_sys_nds add column calculated boolean;
update sprav_sys_nds set calculated=false;

insert into sprav_sys_nds (name, name_api_atol, is_active, calculated) values
('10/110','vat110',true,true),
('20/120','vat120',true,true);
update sprav_sys_nds set description='' where calculated=true;

drop table if exists spravsysndsjson;

alter table sprav_sys_ppr add column id_api_atol int;
alter table sprav_sys_ppr add column name_api_atol varchar(100);

update sprav_sys_ppr set name='Товар', id_api_atol=1, name_api_atol='commodity' where id=1;
update sprav_sys_ppr set name='Подакцизный товар', id_api_atol=2, name_api_atol='excise' where id=2;
update sprav_sys_ppr set name='Работа', id_api_atol=3, name_api_atol='job' where id=3;
update sprav_sys_ppr set name='Услуга', id_api_atol=4, name_api_atol='service' where id=4;

insert into sprav_sys_ppr (name, abbreviation, description, id_api_atol, name_api_atol) values
('Ставка азартной игры','','',5,'gamblingBet'),
('Выигрыш азартной игры','','',6,'gamblingPrize'),
('Лотерейный билет','','',7,'lottery'),
('Выигрыш лотереи','','',8,'lotteryPrize'),
('Предост. рез-тов интелл. деятельности','','',9,'intellectualActivity'),
('Платёж','','',10,'payment'),
('Агентское вознаграждение','','',11,'agentCommission'),
('Выплата','','',12,'pay'),
('Иной предмет расчета','','',13,'another'),
('Имущественное право','','',14,'proprietaryLaw'),
('Внереализационный доход','','',15,'nonOperatingIncome'),
('Иные платежи и взносы','','',16,'otherContributions'),
('Торговый сбор','','',17,'merchantTax'),
('Курортный сбор','','',18,'resortFee'),
('Залог','','',19,'deposit'),
('Расход','','',20,'consumption'),
('Взносы на ОПС ИП','','',21,'soleProprietorCPIContributions'),
('Взносы на ОПС','','',22,'cpiContributions'),
('Взносы на ОМС ИП','','',23,'soleProprietorCMIContributions'),
('Взносы на ОМС','','',24,'cmiContributions'),
('Взносы на ОСС','','',25,'csiContributions'),
('Платеж казино','','',26,'casinoPayment');

alter table users add column vatin varchar(30);
------------------------------------------------------------------
ALTER TABLE sprav_sys_taxation_types ADD CONSTRAINT sprav_sys_taxation_types_id_uq UNIQUE (id);
create table kassa(
    id                bigserial primary key not null,
    master_id         bigint not null, 
    creator_id        bigint not null, 
    changer_id        bigint, 
    company_id        bigint not null,
    department_id     bigint not null,
    date_time_created timestamp with time zone not null,
    date_time_changed timestamp with time zone,
    name              varchar(60) not null,
    server_type       varchar(20) not null,
    sno1_id           int not null not null,
    billing_address   varchar(500) not null,
    device_server_uid varchar(20) not null,
    additional        varchar(1000),
    server_address    varchar(300) not null,
    allow_to_use      boolean not null,
    is_deleted        boolean,

    foreign key (master_id) references users(id),
    foreign key (creator_id) references users(id),
    foreign key (changer_id) references users(id),
    foreign key (company_id) references companies(id),
    foreign key (department_id) references departments(id),
    foreign key (sno1_id) references sprav_sys_taxation_types(id)
);

create table kassa_user_settings(
    user_id                bigint primary key not null,
    master_id              bigint not null, 
    company_id             bigint not null,
    selected_kassa_id	   bigint not null,
    --кассир: 'current'-текущая учетная запись, 'another'-другая учетная запись, 'custom' произвольные ФИО
    cashier_value_id       varchar(8),
    customCashierFio       varchar(30),
    customCashierVatin     varchar(12),
    --адрес места расчётов. 'settings' - как в настройках кассы, 'customer' - брать из адреса заказчика, 'custom' произвольный адрес
    billing_address        varchar(8),
    custom_billing_address varchar(500),
    foreign key (selected_kassa_id) references kassa(id),
    foreign key (user_id) references users(id),
    foreign key (master_id) references users(id),
    foreign key (company_id) references companies(id)
);
ALTER TABLE sprav_sys_taxation_types ADD column short_name varchar(30);
update sprav_sys_taxation_types set short_name='ОСН' where id=1;
update sprav_sys_taxation_types set short_name='УСН доход' where id=2;
update sprav_sys_taxation_types set short_name='УСН доход-расход' where id=3;
update sprav_sys_taxation_types set short_name='ЕНВД' where id=4;
update sprav_sys_taxation_types set short_name='ЕСХН' where id=5;
update sprav_sys_taxation_types set short_name='Патент' where id=6;

ALTER TABLE sprav_sys_ppr ADD column is_material boolean;

update sprav_sys_ppr set is_material=true where id in(1,2,7,13);
update sprav_sys_ppr set is_material=false where id not in(1,2,7,13);


ALTER TABLE customers_orders_product ADD column reserved_current numeric(15,3);

alter table customers_orders_product drop column reserve;


alter table settings_customers_orders add column autocreate_on_start boolean;
alter table settings_customers_orders add column autocreate_on_cheque boolean;

alter table settings_customers_orders add column status_id_on_autocreate_on_cheque bigint;
alter table settings_customers_orders add constraint status_id_on_autocreate_on_cheque_fkey foreign key (status_id_on_autocreate_on_cheque) references sprav_status_dock (id);

удалить вручную "product_prices_uq" в product_prices

ALTER TABLE product_prices ADD CONSTRAINT product_prices_uq UNIQUE (product_id, price_type_id) ;

insert into documents (name,page_name,show) values ('Кассы онлайн','kassa',1);

insert into permissions (name,description,document_name,document_id) values
('Боковая панель - отображать в списке документов','Показывать документ в списке документов на боковой панели','Кассы онлайн',24),
('Создание документов по всем предприятиям','Возможность создавать новые документы "Кассы онлайн" по всем предприятиям','Кассы онлайн',24),
('Создание документов своего предприятия','Возможность создавать новые документы "Кассы онлайн" своего предприятия','Кассы онлайн',24),
('Создание документов своих отделений','Возможность создавать новые документы "Кассы онлайн" по своим отделениям','Кассы онлайн',24),
('Удаление документов по всем предприятиям','Возможность удалить документ "Кассы онлайн" в архив по всем предприятиям','Кассы онлайн',24),
('Удаление документов своего предприятия','Возможность удалить документ "Кассы онлайн" своего предприятия в архив','Кассы онлайн',24),
('Удаление документов своих отделений','Возможность удалить документ "Кассы онлайн" одного из своих отделений','Кассы онлайн',24),
('Просмотр документов по всем предприятиям','Прсмотр информации в документах "Кассы онлайн" по всем предприятиям','Кассы онлайн',24),
('Просмотр документов своего предприятия','Прсмотр информации в документах "Кассы онлайн" своего предприятия','Кассы онлайн',24),
('Просмотр документов своих отделений','Прсмотр информации в документах "Кассы онлайн" по своим отделениям','Кассы онлайн',24),
('Редактирование документов по всем предприятиям','Редактирование документов "Кассы онлайн" по всем предприятиям','Кассы онлайн',24),
('Редактирование документов своего предприятия','Редактирование документов "Кассы онлайн" своего предприятия','Кассы онлайн',24),
('Редактирование документов своих отделений','Редактирование документов "Кассы онлайн" по своим отделениям','Кассы онлайн',24);

**********************************************************************************************************
**********************************************************************************************************
**********************************************************************************************************
create table shifts(
 id bigserial primary key not null,
 master_id  bigint not null, 
 creator_id bigint not null,
 closer_id bigint,
 date_time_created timestamp with time zone not null,
 date_time_closed timestamp with time zone,
 company_id bigint not null,  
 department_id bigint not null,
 kassa_id bigint not null,
 shift_number int not null,
 
 foreign key (master_id) references users(id),
 foreign key (creator_id) references users(id),
 foreign key (closer_id) references users(id),
 foreign key (company_id) references companies(id),
 foreign key (department_id) references departments(id)
);

create table retail_sales(
 id bigserial primary key not null,
 master_id  bigint not null, 
 creator_id bigint not null,
 changer_id bigint,
 date_time_created timestamp with time zone not null,
 date_time_changed timestamp with time zone,
 company_id bigint not null,  
 department_id bigint not null,
 customers_orders_id bigint,
 shift_id bigint,
 cagent_id bigint not null,
 status_id bigint,
 doc_number int not null,
 name varchar(120),
 description varchar(2048),
 nds boolean,
 nds_included boolean,
 is_deleted boolean,
 
 foreign key (master_id) references users(id),
 foreign key (creator_id) references users(id),
 foreign key (changer_id) references users(id),
 foreign key (shift_id) references shifts(id),
 foreign key (customers_orders_id) references customers_orders(id),
 foreign key (company_id) references companies(id),
 foreign key (department_id) references departments(id),
 foreign key (cagent_id) references cagents(id),
 foreign key (status_id) references sprav_status_dock (id) ON DELETE SET NULL
);

insert into documents (name,page_name,show) values ('Розничные продажи','retailsales',1);

insert into permissions (name,description,document_name,document_id) values
('Боковая панель - отображать в списке документов','Показывать документ в списке документов на боковой панели','Розничные продажи',25),
('Создание документов по всем предприятиям','Возможность создавать новые документы "Розничные продажи" по всем предприятиям','Розничные продажи',25),
('Создание документов своего предприятия','Возможность создавать новые документы "Розничные продажи" своего предприятия','Розничные продажи',25),
('Создание документов своих отделений','Возможность создавать новые документы "Розничные продажи" по своим отделениям','Розничные продажи',25),
('Удаление документов по всем предприятиям','Возможность удалить документ "Розничные продажи" в архив по всем предприятиям','Розничные продажи',25),
('Удаление документов своего предприятия','Возможность удалить документ "Розничные продажи" своего предприятия в архив','Розничные продажи',25),
('Удаление документов своих отделений','Возможность удалить документ "Розничные продажи" одного из своих отделений','Розничные продажи',25),
('Удаление документов созданных собой','Возможность удалить документ "Розничные продажи", созданных собой','Розничные продажи',25),
('Просмотр документов по всем предприятиям','Прсмотр информации в документах "Розничные продажи" по всем предприятиям','Розничные продажи',25),
('Просмотр документов своего предприятия','Прсмотр информации в документах "Розничные продажи" своего предприятия','Розничные продажи',25),
('Просмотр документов своих отделений','Прсмотр информации в документах "Розничные продажи" по своим отделениям','Розничные продажи',25),
('Просмотр документов созданных собой','Прсмотр информации в документах "Розничные продажи", созданных собой','Розничные продажи',25),
('Редактирование документов по всем предприятиям','Редактирование документов "Розничные продажи" по всем предприятиям','Розничные продажи',25),
('Редактирование документов своего предприятия','Редактирование документов "Розничные продажи" своего предприятия','Розничные продажи',25),
('Редактирование документов своих отделений','Редактирование документов "Розничные продажи" по своим отделениям','Розничные продажи',25),
('Редактирование документов созданных собой','Редактирование документов "Розничные продажи", созданных собой','Розничные продажи',25);

create table retail_sales_product (
 id bigserial primary key not null,
 master_id bigint not null,
 company_id bigint not null,
 product_id bigint not null,
 retail_sales_id bigint not null,
 product_count numeric(15,3) not null,
 product_price numeric(12,2),
 product_sumprice numeric(15,2),
 edizm_id int not null,
 price_type_id bigint,
 nds_id bigint not null,
 department_id bigint not null,
 product_price_of_type_price numeric(12,2),

 foreign key (retail_sales_id) references retail_sales (id),
 foreign key (edizm_id) references sprav_sys_edizm (id),
 foreign key (nds_id) references sprav_sys_nds (id),
 foreign key (price_type_id) references sprav_type_prices (id),
 foreign key (product_id ) references products (id),
 foreign key (department_id ) references departments (id)
);

ALTER TABLE retail_sales_product ADD CONSTRAINT retail_sales_product_uq UNIQUE (product_id, retail_sales_id, department_id);

create table settings_retail_sales (
    id                          bigserial primary key not null,
    master_id                   bigint not null, 
    company_id                  bigint not null,  
    user_id                     bigint not null,
    customer_id                 bigint,
    department_id               bigint,
    name                        varchar(120),
    priority_type_price_side    varchar(8),
    pricing_type                varchar(16), 
    price_type_id               bigint,
    change_price                numeric(12,2),
    plus_minus                  varchar(8),
    change_price_type           varchar(8),
    hide_tenths                 boolean,
    save_settings               boolean,
    autocreate_on_cheque        boolean,
    status_id_on_autocreate_on_cheque bigint,
    foreign key (price_type_id) references sprav_type_prices (id),
    foreign key (master_id) references users(id),
    foreign key (user_id) references users(id),
    foreign key (company_id) references companies(id)
);
alter table settings_retail_sales add constraint settings_retail_sales_user_uq UNIQUE (user_id);
alter table settings_retail_sales add constraint department_id_fkey foreign key (department_id) references departments (id);
alter table settings_retail_sales add constraint customer_id_fkey foreign key (customer_id) references cagents (id);
alter table settings_retail_sales add constraint status_id_on_autocreate_on_cheque_fkey foreign key (status_id_on_autocreate_on_cheque) references sprav_status_dock (id);

---------------  после паузы в программировании  --------------------------------

update documents set name='Розничная продажа' where id=25;

create table receipts(
 id bigserial primary key not null,
 master_id bigint not null,
 creator_id bigint not null,
 company_id bigint not null,
 department_id bigint not null,
 kassa_id bigint not null, -- id кассового аппарата
 shift_id bigint not null, --id смены 
 document_id int not null, -- id документа, в котором был отбит чек (например, розничные продажи - 25)
 retail_sales_id bigint, -- если чек из розничных продаж - ставится id розничной продажи
 date_time_created timestamp with time zone not null, --дата и время создания чека
 operation_id varchar(64), -- sell, buyCorrection, sellReturnCorrection ...
 sno_id int not null, -- id системы налогообложения кассы 
 billing_address varchar(256), -- место расчета
 payment_type varchar(16), -- тип оплаты (нал, бнал, смешанная) cash | electronically | mixed
 cash numeric(15,2), -- сколько оплачено налом
 electronically numeric(15,2), -- склько оплачено безналом
 foreign key (master_id) references users(id),
 foreign key (creator_id) references users(id),
 foreign key (company_id) references companies(id),
 foreign key (department_id) references departments(id),
 foreign key (kassa_id) references kassa(id),
 foreign key (shift_id) references shifts(id),
 foreign key (document_id) references documents(id),
 foreign key (retail_sales_id) references retail_sales(id),
 foreign key (sno_id) references sprav_sys_taxation_types(id)
)

alter table retail_sales add column receipt_id bigint; --id чека, отбитого из розничной продажи
alter table retail_sales add constraint receipt_id_fkey foreign key (receipt_id) references receipts (id);

alter table kassa add column zn_kkt varchar(64); --заводской номер ккт
alter table kassa add constraint znkkt_company_uq UNIQUE (company_id, zn_kkt); -- заводской номер кассы в пределах предприятия должен быть уникальный. Почему в пределах а не вообще? Потому что master (владелец предприятий) может перерегистрировать кассу на другое свое предприятие. Так же, в облачной версии Докио, владелец кассы может снять ее с регистрации и продать другому пользователю Докио.

alter table shifts add column zn_kkt varchar(64) not null; --заводской номер ккт
alter table shifts add column shift_status_id varchar(8) not null; --статус смены: opened closed expired
alter table shifts add column shift_expired_at varchar(32) not null; -- время истечения (экспирации) смены, генерируется ККМ в виде строки
alter table shifts add column fn_serial varchar(32) not null; --серийный номер ФН
alter table shifts add constraint kassaid_shiftnumber_fnserial_uq UNIQUE (kassa_id, shift_number, fn_serial); --по каждой кассе должна быть только одна открытая смена. Номер смены сбрасывается при смене ФН, и он не может обеспечить уникальность смены ККМ, поэтому для уникальности смены также берется серийный номер ФН

CREATE SEQUENCE developer_shiftnum START 1;

create table settings_dashboard (
    id                  bigserial primary key not null,
    master_id           bigint not null, 
    user_id             bigint not null,
    company_id          bigint not null,  
    foreign key (master_id) references users(id),
    foreign key (user_id) references users(id),
    foreign key (company_id) references companies(id)
);

alter table settings_dashboard add constraint settings_dashboard_user_uq UNIQUE (user_id);

insert into documents (name,page_name,show) values ('Стартовая страница','retailsales',1);

insert into permissions (name,description,document_name,document_id) values
('Отображать','Показывать стартовую страницу','Стартовая страница',26),
('Отчёт "Объёмы" - просмотр по всем предприятиям','Возможность построения отчётов по объёмам продаж, закупок и др. по всем предприятиям','Стартовая страница',26);
insert into permissions (name,description,document_name,document_id) values
('Отчёт "Объёмы" - просмотр по своему предприятию','Возможность построения отчётов по объёмам продаж, закупок и др. по всем отделениям своего предпрития','Стартовая страница',26),
('Отчёт "Объёмы" - просмотр по своим отделениям','Возможность построения отчётов по объёмам продаж, закупок и др. по своим отделениям своего предпрития','Стартовая страница',26);


delete from receipts;
delete from shifts;
delete from retail_sales_product;
delete from retail_sales;

ALTER SEQUENCE retail_sales_id_seq RESTART WITH 1;
ALTER SEQUENCE retail_sales_product_id_seq RESTART WITH 1;

--на боевом сервере:
insert into retail_sales(
id,
master_id,
creator_id,
company_id,
department_id,
date_time_created,
cagent_id,
name,
description,
doc_number)
select
id,
master_id,
creator_id,
company_id,
department_id,
date_time_created,
cagent_id,
'Восстановленная',
'Продажа восстановлена по документу Заказ покупателя 21.07.2021',
doc_number
from customers_orders where coalesce(is_deleted,false)!=true
order by date_time_created;

--на боевом сервере:
insert into retail_sales_product(
id,
master_id,
company_id,
department_id,
retail_sales_id,
product_id,
product_count,
product_price,
product_sumprice,
edizm_id,
nds_id,
product_price_of_type_price)
select
id,
master_id,
company_id,
department_id,
customers_orders_id,
product_id,
product_count,
product_price,
product_sumprice,
edizm_id,
nds_id,
product_price_of_type_price
from customers_orders_product 
where customers_orders_id in (select id from customers_orders where coalesce(is_deleted,false)!=true);

ALTER SEQUENCE retail_sales_id_seq RESTART WITH 6000;
ALTER SEQUENCE retail_sales_product_id_seq RESTART WITH 9000;

insert into retail_sales(
master_id,
creator_id,
company_id,
department_id,
date_time_created,
cagent_id,
name,
description,
doc_number)
select
master_id,
creator_id,
company_id,
department_id,
date_time_created,
(select id from cagents where name='Обезличенный покупатель' and company_id=1),
'Восстановленная',
'Продажа восстановлена по истории документа "Итоги смен", товары не совпадают, т.к. в Итогах смен товары не прописывались. На один Итог смены создана одна Розничная продажа.',
0
from traderesults where company_id=1
and date_time_created<to_date('2021-02-01','YYYY-MM-DD');

insert into retail_sales_product(
master_id,
company_id,
department_id,
retail_sales_id,
product_id,
product_count,
product_price,
product_sumprice,
edizm_id,
nds_id)
select
master_id,
company_id,
department_id,
(select id from retail_sales where date_time_created=tr.date_time_created),
(select id from products where name='Предмет расчёта без наименования'),
1,
(incoming_cash_checkout+incoming_cashless_checkout+incoming_cash2+incoming_cashless2)/100,
(incoming_cash_checkout+incoming_cashless_checkout+incoming_cash2+incoming_cashless2)/100,
12,
1
from traderesults tr where company_id=1
and date_time_created<to_date('2021-02-01','YYYY-MM-DD')
and date_time_created>to_date('2019-09-30','YYYY-MM-DD')
order by tr.id;


ALTER SEQUENCE retail_sales_id_seq RESTART WITH 7000;
ALTER SEQUENCE retail_sales_product_id_seq RESTART WITH 10000;



***********************************************************************************************************************************************
***********************************************************************************************************************************************
***********************************************************************************************************************************************
--alter table kassa add column zn_kkt varchar(64); --заводской номер ккт - СДЕЛАТЬ NOT NULL !!!

create table inventory(
 id bigserial primary key not null,
 master_id  bigint not null, 
 company_id bigint not null,  
 department_id bigint not null,
 creator_id bigint not null,
 changer_id bigint,
 date_time_created timestamp with time zone not null,
 date_time_changed timestamp with time zone,
 status_id bigint,
 doc_number int not null,
 name varchar(120),
 description varchar(2048),
 is_deleted boolean,
 foreign key (master_id) references users(id),
 foreign key (creator_id) references users(id),
 foreign key (changer_id) references users(id),
 foreign key (company_id) references companies(id),
 foreign key (department_id) references departments(id),
 foreign key (status_id) references sprav_status_dock (id) ON DELETE SET NULL
);

insert into documents (name,page_name,show) values ('Инвентаризация','inventory',1);

insert into permissions (name,description,document_name,document_id) values
('Боковая панель - отображать в списке документов','Показывать документ в списке документов на боковой панели','Инвентаризация',27),
('Создание документов по всем предприятиям','Возможность создавать новые документы "Инвентаризация" по всем предприятиям','Инвентаризация',27),
('Создание документов своего предприятия','Возможность создавать новые документы "Инвентаризация" своего предприятия','Инвентаризация',27),
('Создание документов своих отделений','Возможность создавать новые документы "Инвентаризация" по своим отделениям','Инвентаризация',27),
('Удаление документов по всем предприятиям','Возможность удалить документ "Инвентаризация" в архив по всем предприятиям','Инвентаризация',27),
('Удаление документов своего предприятия','Возможность удалить документ "Инвентаризация" своего предприятия в архив','Инвентаризация',27),
('Удаление документов своих отделений','Возможность удалить документ "Инвентаризация" одного из своих отделений','Инвентаризация',27),
('Удаление документов созданных собой','Возможность удаления документов "Инвентаризация", созданных собой','Инвентаризация',27),
('Просмотр документов по всем предприятиям','Прсмотр информации в документах "Инвентаризация" по всем предприятиям','Инвентаризация',27),
('Просмотр документов своего предприятия','Прсмотр информации в документах "Инвентаризация" своего предприятия','Инвентаризация',27),
('Просмотр документов своих отделений','Прсмотр информации в документах "Инвентаризация" по своим отделениям','Инвентаризация',27),
('Просмотр документов созданных собой','Прсмотр информации в документах "Инвентаризация", созданных собой','Инвентаризация',27),
('Редактирование документов по всем предприятиям','Редактирование документов "Инвентаризация" по всем предприятиям','Инвентаризация',27),
('Редактирование документов своего предприятия','Редактирование документов "Инвентаризация" своего предприятия','Инвентаризация',27),
('Редактирование документов своих отделений','Редактирование документов "Инвентаризация" по своим отделениям','Инвентаризация',27),
('Редактирование документов созданных собой','Редактирование документов "Инвентаризация", созданных собой','Инвентаризация',27);

create table inventory_product (
 id bigserial primary key not null,
 master_id bigint not null,
 company_id bigint not null,
 product_id bigint not null,
 inventory_id bigint not null,
 estimated_balance numeric(15,3) not null,
 actual_balance numeric(15,3) not null,
 product_price numeric(12,2),
 foreign key (inventory_id) references inventory (id),
 foreign key (master_id ) references users (id),
 foreign key (product_id ) references products (id),
 foreign key (company_id ) references companies (id)
);

ALTER TABLE inventory_product ADD CONSTRAINT inventory_product_uq UNIQUE (product_id, inventory_id);

create table settings_inventory (
    id                          bigserial primary key not null,
    master_id                   bigint not null, 
    company_id                  bigint not null,  
    user_id                     bigint not null,
    department_id               bigint,
    name                        varchar(120),
    pricing_type                varchar(16), 
    price_type_id               bigint,
    change_price                numeric(12,2),
    plus_minus                  varchar(8),
    change_price_type           varchar(8),
    hide_tenths                 boolean,
    status_on_finish_id         bigint,

    foreign key (price_type_id) references sprav_type_prices (id),
    foreign key (master_id) references users(id),
    foreign key (user_id) references users(id),
    foreign key (status_on_finish_id) references sprav_status_dock (id),
    foreign key (department_id) references departments (id),
    foreign key (company_id) references companies(id)
);
alter table settings_inventory add constraint settings_inventory_user_uq UNIQUE (user_id);

alter table inventory add column is_completed boolean;

alter table settings_retail_sales alter column pricing_type TYPE varchar (32) USING pricing_type::varchar (32);
alter table settings_customers_orders alter column pricing_type TYPE varchar (32) USING pricing_type::varchar (32);
alter table settings_inventory alter column pricing_type TYPE varchar (32) USING pricing_type::varchar (32);

alter table settings_inventory add column default_actual_balance varchar(16);
alter table settings_inventory add column other_actual_balance numeric(15,3);
alter table settings_inventory add column auto_add boolean;

alter table writeoff add column inventory_id bigint;
alter table writeoff add constraint inventory_id_fkey foreign key (inventory_id) references inventory (id);

alter table posting add column inventory_id bigint;
alter table posting add constraint inventory_id_fkey foreign key (inventory_id) references inventory (id);

alter table products_history add constraint products_history_quantity_check CHECK (quantity >= 0);
alter table product_quantity add constraint products_quantity_check CHECK (quantity >= 0);

alter table writeoff_product alter column edizm_id drop not null;
alter table posting_product alter column edizm_id drop not null;